import unittest
import simuladorCuantico as sc


class TestSimulador(unittest.TestCase):

    def test_experimentoCanicas(self):
        vector = [6, 2, 1, 5, 3, 10]
        vectorCol = sc.transpuesta(vector)
        matrizAdyacencia = [[0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0],
                            [0, 1, 0, 0, 0, 1],
                            [0, 0, 0, 1, 0, 0],
                            [0, 0, 1, 0, 0, 0],
                            [1, 0, 0, 0, 1, 0]]

        resultado_1 = [[0], [0], [12], [5], [1], [9]]
        resultado_2 = [[0], [0], [1], [5], [9], [12]]
        self.assertEqual(resultado_1, sc.operarClicksSistemaD(matrizAdyacencia, vectorCol, 1))
        self.assertEqual(resultado_2, sc.operarClicksSistemaD(matrizAdyacencia, vectorCol, 9))

    def test_experimentoRendijaProb(self):
        resultado_matriz = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.16666666666666666, 0.3333333333333333, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0],
                            [0.16666666666666666, 0.3333333333333333, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
                            [0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 1.0, 0.0, 0.0],
                            [0.16666666666666666, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 1.0, 0.0],
                            [0.16666666666666666, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 1.0]]

        resultado_vector = [[0.0],
                            [0.0],
                            [0.0],
                            [0.16666666666666666],
                            [0.16666666666666666],
                            [0.3333333333333333],
                            [0.16666666666666666],
                            [0.16666666666666666]]

        self.assertEqual(resultado_matriz, sc.operarClicksSistemaP(2, 5, 2)[0])
        self.assertEqual(resultado_vector, sc.operarClicksSistemaP(2, 5, 2)[1])

    def test_experimentoRendijasCuant(self):
        resultado_1 = [[(0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)],
                       [(0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0)],
                       [(0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0)],
                       [(-0.2886751345948129, 0.2886751345948129), (-0.4082482904638631, 0.4082482904638631),
                        (0.0, 0.0), (1.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0)],
                       [(-0.2886751345948129, -0.2886751345948129), (-0.4082482904638631, -0.4082482904638631),
                        (0.0, 0.0), (0.0, 0.0), (1.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0)],
                       [(0.0, 0.0), (0.4082482904638631, -0.4082482904638631),
                        (-0.4082482904638631, 0.4082482904638631), (0.0, 0.0), (0.0, 0.0), (1.0, 0.0), (0.0, 0.0),
                        (0.0, 0.0)],
                       [(-0.2886751345948129, -0.2886751345948129), (0.0, 0.0),
                        (-0.4082482904638631, -0.4082482904638631), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 0.0),
                        (0.0, 0.0)],
                       [(0.2886751345948129, -0.2886751345948129), (0.0, 0.0),
                        (0.4082482904638631, -0.4082482904638631), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0),
                        (1.0, 0.0)]]

        resultado_2 = [[(0.0, 0.0)],
                       [(0.0, 0.0)],
                       [(0.0, 0.0)],
                       [(-0.2886751345948129, 0.2886751345948129)],
                       [(-0.2886751345948129, -0.2886751345948129)],
                       [(0.0, 0.0)],
                       [(-0.2886751345948129, -0.2886751345948129)],
                       [(0.2886751345948129, -0.2886751345948129)]]

        self.assertEqual(resultado_1, sc.operarClicksSistemaC(2, 5, 1)[0])
        self.assertEqual(resultado_2, sc.operarClicksSistemaC(2, 5, 1)[1])


if __name__ == '__main__':
    unittest.main()
